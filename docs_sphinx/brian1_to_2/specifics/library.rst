Library models
==============

Neuron models
-------------
The neuron models in Brian 1's ``brian.library.IF`` package are nothing more
than shorthands for equations. The following table shows how the models from
Brian 1 can be converted to explicit equations (and reset statements in the case
of the adaptive exponential integrate-and-fire model) for use in Brian 2. The
examples include a "current" ``I`` (depending on the model not necessarily in
units of AmpÃ¨re) and could e.g. be used to plot the f-I curve of the neuron.

Perfect integrator
~~~~~~~~~~~~~~~~~~
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+
| Brian 1                                                          | Brian 2                                                                                  |
+==================================================================+==========================================================================================+
+ .. code::                                                        | .. code::                                                                                |
+                                                                  |                                                                                          |
+    eqs = (perfect_IF(tau=10*ms) +                                |    tau = 10*ms                                                                           |
+           Current('I : volt'))                                   |    eqs = '''dvm/dt = I/tau : volt                                                        |
+    group = NeuronGroup(N, eqs,                                   |             I : volt'''                                                                  |
+                        threshold='v > -50*mV',                   |    group = NeuronGroup(N, eqs,                                                           |
+                        reset='v = -70*mV')                       |                        threshold='v > -50*mV'                                            |
+                                                                  |                        reset='v = -70*mV')                                               |
+                                                                  |                                                                                          |
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+

Leaky integrate-and-fire neuron
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+
| Brian 1                                                          | Brian 2                                                                                  |
+==================================================================+==========================================================================================+
+ .. code::                                                        | .. code::                                                                                |
+                                                                  |                                                                                          |
+    eqs = (leaky_IF(tau=10*ms, El=-70*mV) +                       |    tau = 10*ms; El = -70*mV                                                              |
+           Current('I : volt'))                                   |    eqs = '''dvm/dt = ((El - vm) + I)/tau : volt                                          |
+    group = ... # see above                                       |             I : volt'''                                                                  |
+                                                                  |    group = ... # see above                                                               |
+                                                                  |                                                                                          |
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+

Exponential integrate-and-fire neuron
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+
| Brian 1                                                          | Brian 2                                                                                  |
+==================================================================+==========================================================================================+
+ .. code::                                                        | .. code::                                                                                |
+                                                                  |                                                                                          |
+    eqs = (exp_IF(C=1*nF, gL=30*nS, EL=-70*mV,                    |    C = 1*nF; gL = 30*nS; EL = -70*mV; VT = -50*mV; DeltaT = 2*mV                         |
+                  VT=-50*mV, DeltaT=2*mV) +                       |    eqs = '''dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-VT)/DeltaT) + I)/C : volt             |
+           Current('I : amp'))                                    |             I : amp'''                                                                   |
+    group = ... # see above                                       |    group = ... # see above                                                               |
+                                                                  |                                                                                          |
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+

Quadratic integrate-and-fire neuron
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+
| Brian 1                                                          | Brian 2                                                                                  |
+==================================================================+==========================================================================================+
+ .. code::                                                        | .. code::                                                                                |
+                                                                  |                                                                                          |
+    eqs = (quadratic_IF(C=1*nF, a=5*nS/mV,                        |    C = 1*nF; a=5*nS/mV; EL=-70*mV; VT = -50*mV                                           |
+           EL=-70*mV, VT=-50*mV) +                                |    eqs = '''dvm/dt = (a_q*(vm-EL)*(vm-VT) + I)/C : volt                                  |
+           Current('I : amp'))                                    |             I : amp'''                                                                   |
+    group = ... # see above                                       |    group = ... # see above                                                               |
+                                                                  |                                                                                          |
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+

Izhikevich neuron
~~~~~~~~~~~~~~~~~
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+
| Brian 1                                                          | Brian 2                                                                                  |
+==================================================================+==========================================================================================+
+ .. code::                                                        | .. code::                                                                                |
+                                                                  |                                                                                          |
+    eqs = (Izhikevich(a=0.02/ms, b=0.2/ms) +                      |    a = 0.02/ms; b = 0.2/ms                                                               |
+           Current('I : volt/second'))                            |    eqs = '''dvm/dt = (0.04/ms/mV)*vm**2+(5/ms)*vm+140*mV/ms-w + I : volt                 |
+    group = ... # see above                                       |             dw/dt = a_I*(b_I*vm-w) : volt/second                                         |
+                                                                  |             I : volt/second'''                                                           |
+                                                                  |    group = ... # see above                                                               |
+                                                                  |                                                                                          |
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+

Adaptive exponential integrate-and-fire neuron ("Brette-Gerstner model")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+
| Brian 1                                                          | Brian 2                                                                                  |
+==================================================================+==========================================================================================+
+ .. code::                                                        | .. code::                                                                                |
+                                                                  |                                                                                          |
+    # AdEx, aEIF, and Brette_Gerstner all refer to the same model |   C = 1*nF; gL = 30*nS; EL = -70*mV; VT = -50*mV; DeltaT = 2*mV; tauw = 150*ms; a = 4*nS |
+    eqs = (aEIF(C=1*nF, gL=30*nS, EL=-70*mV,                      |   eqs = '''dvm/dt = (gL*(EL-vm)+gL*DeltaT*exp((vm-VT)/DeltaT) -w + I)/C : volt           |
+                VT=-50*mV, DeltaT=2*mV, tauw=150*ms, a=4*nS) +    |            dw/dt=(a_BG*(vm-EL)-w)/tauw : amp                                             |
+           Current('I:amp'))                                      |            I : volt/second'''                                                            |
+    group = NeuronGroup(N, eqs,                                   |   group = NeuronGroup(N, eqs,                                                            |
+                        threshold='v > -20*mV',                   |                       threshold='v > -20*mV',                                            |
+                        reset=AdaptiveReset(Vr=-70*mV, b=0.08*nA))|                       reset='vm=-70*mV; w += 0.08*nA')                                   |
+                                                                  |                                                                                          |
+------------------------------------------------------------------+------------------------------------------------------------------------------------------+
