# USE_SPECIFIERS { Cm, dt, v, _num_neurons,
#                  ab_star, b_plus, ab_plus, b_minus, ab_minus, v_star, u_plus, u_minus}

'''
Solves the cable equation (spatial diffusion of currents).
This is where most time-consuming time computations are done.
'''

from scipy.linalg import solve_banded
from numpy import zeros

{% for line in code_lines %}
{{line}}
{% endfor %}

# Particular solution
b=-(Cm/dt*v)-_I0
ab = zeros((3,_num_neurons))
ab[:]=ab_star
ab[1,:]-=_gtot
v_star[:]=solve_banded((1,1),ab,b,overwrite_ab=True,overwrite_b=True)
# Homogeneous solutions
b[:]=b_plus
ab[:]=ab_plus 
ab[1,:]-=_gtot
u_plus[:]=solve_banded((1,1),ab,b,overwrite_ab=True,overwrite_b=True)
b[:]=b_minus
ab[:]=ab_minus 
ab[1,:]-=_gtot
u_minus[:]=solve_banded((1,1),ab,b,overwrite_ab=True,overwrite_b=True)
