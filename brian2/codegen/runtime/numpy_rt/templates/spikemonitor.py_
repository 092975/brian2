{# USES_VARIABLES {i, t, count, _clock_t, _source_start, _source_stop} #}
import numpy as _numpy

{#  Get the name of the array that stores these events (e.g. the spikespace array) #}
{% set _eventspace = get_array_name(eventspace_variable) %}

_events = {{_eventspace}}[:{{_eventspace}}[-1]]
# Take subgroups into account
_events = _events[(_events >= _source_start) & (_events < _source_stop)]
_events -= _source_start
_n_events = len(_events)
if _n_events > 0:

    _curlen = len({{_dynamic_t}})
    _newlen = _curlen + _n_events
    _owner.resize(_newlen)
    {{_dynamic_t}}[_curlen:_newlen] = _clock_t
    {{_dynamic_i}}[_curlen:_newlen] = _events

    {{count}}[_events] += 1
